name: "publish"

# Trigger action when a version tag (like v1.0.0 or v1.0.0-19) is pushed.
on:
  push:
    tags:
      - "v[0-9]+.*"
  workflow_dispatch:

jobs:
  publish-tauri:
    # Only run this job when the base branch is main.
    # Note: This only works with lightweight tags, not annotated ones.
    # Source: https://github.com/orgs/community/discussions/13226#discussioncomment-11958813
    if: github.event.base_ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    environment: publish
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-22.04, windows-latest]

        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

        # The universal build runs but doesn't expand abbreviations for some reason.
        # TODO: Enable this again when it works.
        # include:
        #   - platform: macos-latest
        #     args: --target universal-apple-darwin

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        # libxdo-dev: https://crates.io/crates/enigo
        run: |
          sudo apt-get update
          sudo apt-get install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libxdo-dev \
            patchelf

      # Only needed when building the universal version.
      # - name: install rust targets (macos only)
      #   if: matrix.platform == 'macos-latest'
      #   run: |
      #     rustup target add aarch64-apple-darwin
      #     rustup target add x86_64-apple-darwin

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
